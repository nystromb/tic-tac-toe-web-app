#!/usr/bin/env coffee

app = require "../app"
debug = require("debug") "coffee-script-test:server"
http = require "http"

normalizePort = (val) ->
  port = parseInt val, 10

  if isNaN port
    val
  else if port >= 0
    port
  false

onError = (error) ->
  if error.syscall isnt "listen"
    throw error

  bind = if typeof port is "string" then "Pipe #{port}" else "Port #{port}"

  switch error.code
    when "EACCES"
      console.error "#{bind} requires elevated privileges"
      process.exit 1
    when "EADDRINUSE"
      console.error "#{bind} is already in use"
      process.exit 1
    else
      throw error

onListening = ->
  addr = server.address()
  bind = if typeof addr is "string" then "pipe #{addr}" else "port #{addr.port}"
  debug "Listening on #{bind}"

port = normalizePort(process.env.PORT) or "80"
app.set "port", port

server = http.createServer app

server.listen port
server.on "error", onError
server.on "listening", onListening
